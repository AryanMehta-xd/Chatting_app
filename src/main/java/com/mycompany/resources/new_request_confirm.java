package com.mycompany.resources;

import com.mycompany.dataPacks.db_conn;
import com.mycompany.dataPacks.imageMethods;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Aryan Mehta
 */
public class new_request_confirm extends javax.swing.JFrame {

    private PreparedStatement ps1,ps2;
    private ResultSet rs1;
    private db_conn db_var = new db_conn();
    private imageMethods im = new imageMethods();
    private int status;
    
    private String username;
    
    public new_request_confirm(String username) {
        initComponents();
        this.username = username;
        init();
    }

    private void init(){
        getContentPane().setBackground(Color.WHITE);
        pan_show_requests.setLayout(new MigLayout());
        showRequests();
    }
    
    public void setLocationRelative(JLabel label){
        int x_loc = label.getX();
        int y_loc = label.getY();
        
        setLocation(x_loc, y_loc+200);
    }
    
    private void showRequests(){
        try {
            ps1 = db_var.db_Connection.prepareStatement("select * from friend_request where receiver_username = ? and status = ?");
            ps1.setString(1, username);
            ps1.setString(2, "pending");
            rs1 = ps1.executeQuery();
            
            while(rs1.next()){
                String sender_username = rs1.getString("sender_username");
                
                request_status_pan pan = new request_status_pan(sender_username);
                
                //accept button logic
                pan.setActionListener_1(new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try {
                            ps2 = db_var.db_Connection.prepareStatement("update friend_request set status = ? where sender_username = ? and receiver_username = ?");
                            ps2.setString(1, "accepted");
                            ps2.setString(2, sender_username);
                            ps2.setString(3, username);
                            
                            status = ps2.executeUpdate();
                            
                            if(status==1){
                                JOptionPane.showMessageDialog(null, "Request Accepted!");
                                pan_show_requests.remove(pan);
                                resetPan();
                                
                            }else{
                                JOptionPane.showMessageDialog(null, "Something went wrong");
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                    
                });
                
                //reject button logic
                pan.setActionListener_2(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try {
                            ps2 = db_var.db_Connection.prepareStatement("update friend_request set status = ? where sender_username = ? and receiver_username = ?");
                            ps2.setString(1, "rejected");
                            ps2.setString(2, sender_username);
                            ps2.setString(3, username);
                            
                            status = ps2.executeUpdate();
                            
                            if(status==1){
                                JOptionPane.showMessageDialog(null, "Request Rejected!");
                                pan_show_requests.remove(pan);
                                resetPan();
                            }else{
                                JOptionPane.showMessageDialog(null, "Something went wrong");
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                });
                
                pan_show_requests.add(pan,"wrap");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void resetPan(){
        pan_show_requests.repaint();
        pan_show_requests.revalidate();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pan_show_requests = new javax.swing.JLayeredPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pan_show_requests.setBackground(new java.awt.Color(255, 255, 255));
        pan_show_requests.setOpaque(true);

        javax.swing.GroupLayout pan_show_requestsLayout = new javax.swing.GroupLayout(pan_show_requests);
        pan_show_requests.setLayout(pan_show_requestsLayout);
        pan_show_requestsLayout.setHorizontalGroup(
            pan_show_requestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        pan_show_requestsLayout.setVerticalGroup(
            pan_show_requestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(pan_show_requests);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        dispose();
    }//GEN-LAST:event_formMouseExited

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(new_request_confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(new_request_confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(new_request_confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(new_request_confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new new_request_confirm("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLayeredPane pan_show_requests;
    // End of variables declaration//GEN-END:variables
}
